Board:
Valuation, CheckBoard

Unit-test:
Players
Group

Make unit test count passes and fails
Clean up test cases some more, e.g. Deal

grep TODO *.cpp *.h

Write RBN parser
Test on concatenated RBN file
Write parser for LIN and PBN generated by RBN
Extend to "real" LIN and PBN
Use Richard's TXT format
Possibly extend to EML, RBX (like RBN), REC

Generate stats on all sizes needed for database

Add options.cpp to control reading and writing


Look at iterators: (1) auto, (2) it-> instead of new lookup?

Be able to store
- Play trace, including error types
- Hand to open bidding (0-4)
- board display number, can check dealer/vul then
- Files, Dirs (or combine?)
- Systems, and some characteristics
- Defenses, and some characteristics

Think about Board checks

Integrate players (in Board, copy or update from Segment)

Let Segment keep strings of headers, compare with these?
Otherwise need delta functions down in Board etc.

Tableau: Call DDS
Trace: (1) old trace, can count mistakes
(2) new trace, can compare within suit and between suits,
probably friend of Deal.  Need new DDS function?

How to multi-thread the DDS calls?
Threads consume single boards from segments (all instances).

some kind of "make" ("scour") looks for new or changed files.
Could possibly delete old hands and update them, ditto input file.
(names would remain, I think.)

Should somehow recognize complete duplicates

Make stats (histogram) of #cards given per play

Reconcile modified lin files (and pbn and rbn?) with original ones.
Companion .fix files?


Syntax for .bsf files
---------------------
(Bridge script files)
player alias "Display,Last,First" "Display"
select segment "segment"
unselect segment
postpone (rerun in the end, e.g. for partner counts)
select board 7
(stuff to do with the selected board, e.g. contract)
Actually, make it sql-like
