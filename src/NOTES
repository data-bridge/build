Getting 031000 done:
* Figure out a way to fix contract header       6000
* Guidance lines                                3300
* If 1st board missing, probable header bug

Filter somewhere for hands with empty md (no cards).

LIN_VG:
* Cases of trick differences
  + DD agrees with contract -- fix mc claim
  + Play is over -- must somehow fix contract
  - DD agrees with mc -- must somehow contract
  - DD agrees with neither -- what to do?
  - Maybe one or the other is no longer reachable

Write script to detect files with wrong deals
* Extract file names from .txt output
* Run reader on .lin file
* Remove first complete hand, also from vg and rs
* Keep running, keep track just of card error or not
* Output only summary

Find the occasional segfault

            #qx
LIN_VG  948,965
LIN_RP   80,138
LIN     ~ 9,399 incl TRN
JEC      23,045

validate:
* Print example for each "error"

update Pavlicek missive and Excel

write a readLINChunk that utilizes lineData structure
except for LIN_RP.

Move all file*cpp to lno = lineData.lno,
then move printed line interval to actual lno's.

Make prettier line break in LIN print except LIN_RP.

No % comment in LIN except LIN_RP.

Detect uncaught exceptions in own code?

Functionality
-------------
JEC PBN
- support ##
- Find way to ignore OptimumResult
LIN VG
- Include alerts in RBN
- Parse headers for semantic content
LIN shein
LIN tourneys

LIN as it is now, and modified Buffer

Test on concatenated RBN file

Add ability to store optimal results from PBN.

options
-------
-A analyse DD
-p play analyze DD
-n output all names to appropriately named text files

Makefiles
---------
        compile runs    threads
-------------------------------
visual  yes     yes     yes
cygwin  yes     segf
mingw   almost
clang
ubuntu

Valuation
---------
Board: Valuation

Double-dummy
------------
* Tableau: Call DDS
* Trace: 
  - (1) old trace, can count mistakes
  - (2) new trace, can compare within suit and between suits,
    probably friend of Deal.  Need new DDS function?

How to multi-thread the DDS calls?
Threads consume single boards from segments (all instances).

Database
--------
Be able to store
- Play trace, including error types
- Hand to open bidding (0-4)
- board display number, can check dealer/vul then
- Files, Dirs (or combine?)
- Systems, and some characteristics
- Defenses, and some characteristics

Generate each of the tables in an sqlite DB as txt

Ingest them into sqlite in a separate program

some kind of "make" ("scour") looks for new or changed files.
Output proposed deltas to DB

Find a way to normalize all important text fields.

Should somehow recognize complete duplicates.

Syntax for .bsf files
---------------------
(Bridge script files)
player alias "Display,Last,First" "Display"
select segment "segment"
unselect segment
postpone (rerun in the end, e.g. for partner counts)
select board 7
(stuff to do with the selected board, e.g. contract)
Actually, make it sql-like
