15.01.2017
----------
Sheet:
- Output a proposed modified ref line
  Write classify in referr
  Allocate each line to all relevant qx's according to line number
  Later on, for an affected qx, dump its ref lines 
  Change to rs line potentially affects a lot of qx's
  Have to count them

- Other script can parse out the lines that we want
  (delete those sheet files that are left for later)
- Another str() function that outputs an IMP sheet,
  will also need vul

Permit runs with only -i and -d.
Can make output hard to tmp directory.

Buffer:
- Should be able to read a partial or a full ref file
- Partial means only explained lines {ERR_...}

Come up with syntax for ref files, compatible, that marks
error types, e.g. ERR_CONTRACT_HEADER.
{ERR_CONTRACT_HEADER(#tags, #qx, #boards), ...}
Have a canonical list of errors with a name and a label.
They can be in a .h file which Perl parses.

Script in BBOVG directory
- Count
  number of ref files
  explained and unexplained
    number of lines in ref files
    numbers of lines in LIN files that are affected
    number of tags that are affected 
    number of qx's that are affected
    number of boards (open or closed) that are affected

At some point we need to explain the skips as well;
that can go in the skip file.

Complete replacements should go in ref file,
* replace
followed by the new file


Statistics on sources
- Number of (good) hands
- Number of files
  - Perfect
  - Some fixes (say few .ref lines and few .xxx effect lines)
  - Skips

Quality of fixes
- No skip or ref file without a data file (lin to start with)
- No skip file with a ref file
- No duplicates in BBOSH (file names)
- BBOSH files sorted properly into directories
- Detect complete skips
- Fixes in order
- Screenscrape major championships, compare.
- Check links (http, www).


Number of lines:
19,306,468 in LIN_VG
    25,440 in .ref


LIN_VG files with multiple players
- Could be multiple segments
- Could be running changes
- Tolerate whole files or deleted parts of files as well
- Normal play files (6939.lin).

Too harsh fixes especially in BBOVG
- Try multi-threading of BBOVG and also BBOSH
- Fixes should only be for real file errors; program should
  tolerate more
- Fixes might have a fourth entry with the type of fix
- May have deleted whole hands due to single bad cards...
- Maybe tolerate tricks in wrong order within each trick

Too lenient
- No "real" players (West,North,East,South)
- Very expensive bids (offering huge upside score).
- Very expensive or "stupid" plays (quickTricks?).
- Find unrealistic sequences (opening final contract)
- 37865.lin, c32: Why is 2NT, W and 1NT, W not flagged apart?
  (Also perhaps doubled or not?)

Code
- Print example of each validate "error"
- No % comment except LIN_RP and perhaps PBN
- Make prettier line break in LIN print except LIN_RP.
- Buffer should pick up .ref automatically.
- Still segfault at end?
- Allow concatenated files, e.g. RBN but also LIN
- TODOs

Data
- Include BBOVG and BBOSH up to the end of 2016
- Look for more sources?  Later...

update Pavlicek missive and Excel


Functionality
-------------
Named Entity Recognizers for
- Player names
- Tournaments

options
-------
-A analyse DD
-p play analyze DD
-n output all names to appropriately named text files

Makefiles
---------
        compile runs    threads
-------------------------------
visual  yes     yes     yes
cygwin  yes     segf
mingw   almost
clang
ubuntu

Valuation
---------
Board: Valuation

Double-dummy
------------
* Tableau: Call DDS
* Trace: 
  - (1) old trace, can count mistakes
  - (2) new trace, can compare within suit and between suits,
    probably friend of Deal.  Need new DDS function?

How to multi-thread the DDS calls?
Threads consume single boards from segments (all instances).

Database
--------
Be able to store
- Play trace, including error types
- Hand to open bidding (0-4)
- board display number, can check dealer/vul then
- Files, Dirs (or combine?)
- Systems, and some characteristics
- Defenses, and some characteristics

Generate each of the tables in an sqlite DB as txt

Ingest them into sqlite in a separate program

some kind of "make" ("scour") looks for new or changed files.
Output proposed deltas to DB

Find a way to normalize all important text fields.

Should somehow recognize complete duplicates.

Syntax for .bsf files
---------------------
(Bridge script files)
player alias "Display,Last,First" "Display"
select segment "segment"
unselect segment
postpone (rerun in the end, e.g. for partner counts)
select board 7
(stuff to do with the selected board, e.g. contract)
Actually, make it sql-like
