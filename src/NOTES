05.06.2017
----------
funcRead
* Don't need bno?
* Simplify!

* Detect COCO at least in LIN, PBN, RBN, RBX
  Then remove from those .ref files, also in BBOVG

                OCOC    COCO    OOCC    general
  non-decr.     yes     yes     except OC
  O/C           +=      +       may -
  C/O           +       +=      no
  O/O           +       +       +
  C/C           +       +       +

Segment
* Split Segment into HeaderLIN

Board
* Don't copy LINdata, store a pointer only

dispatch
* More general language parser?
* Select by year as well?

Code in general
* Think about having an Instance within Board (vector)
  - Then a loop over Board would use iterators
  - Must be able to go forwards and backwards
  - const iterator!
  - No active instance anymore, would need i as explicit argument
* Segment:  Ditto for activeNo
* Then many more arguments could be const
* Prune TODOs, clean up code again
* Get tough on #include's again, especially in .h files.
* Also use const args where we can.
* Write Files output into a file?  (For speed-up)

.ref files
* As few delete's as possible (expand deleteRBN etc)
* Look at -q output for RPmajors, SH and JEC

Perl scripts in BBOVG
- Make director.pl run without warnings 
  (so have log files of acceptable deviations)

Data
- Include BBOVG and BBOSH up to today
- Look for more sources?  Later...

NERs
* Dates: Write extractor for embedded dates in tags
* Tourneys
* Player names

Higher semantics
* No duplicates in BBOSH (file names)
  Use hash8 from DDS
  For >= 32 hands use 4, >= 24 3, otherwise use 2 (or 1 if only 1 hand)
  Deal to return array suitable for hash8
  Other Deal returns hash directly
  Flag to output to a file, sorted and merged (-n 6)
  Then Perl script to find likely duplicates
* Find unrealistic sequences (opening final contract) [valuation]
* Very expensive bids (offering huge upside score).
* Check links (http, www).  Also from deleted nt comments.
* Look again at players once we check the links in lin files.
* Store convention cards?
* Screenscrape major championships, compare.

* Write dispatch language suitable also for later SQL queries

update Pavlicek missive and Excel

Regression
----------
* perl skipnames.pl all (make it generate skip files)
* perl skiphands.pl all (make it generate skip files)
* ./reader -I -R -c -s -q -v 30 (maybe -p as well)
* ./reader -I -D -v 30
* perl director.pl dir (a lot, unfortunately)
* perl checkskip.pl all, perl checkref.pl all


Makefiles
---------
        compile runs    threads
-------------------------------
visual  yes     yes     yes
cygwin  yes     segf
mingw   almost
clang
ubuntu

Valuation
---------
Board: Valuation

Double-dummy
------------
* Tableau: Call DDS
* Trace: 
  - (1) old trace, can count mistakes
  - (2) new trace, can compare within suit and between suits,
    probably friend of Deal.  Need new DDS function?

How to multi-thread the DDS calls?
Threads consume single boards from segments (all instances).

Database
--------
Be able to store
- Play trace, including error types
- Hand to open bidding (0-4)
- board display number, can check dealer/vul then
- Files, Dirs (or combine?)
- Systems, and some characteristics
 Defenses, and some characteristics

Generate each of the tables in an sqlite DB as txt

Ingest them into sqlite in a separate program

some kind of "make" ("scour") looks for new or changed files.
Output proposed deltas to DB

Find a way to normalize all important text fields.

Should somehow recognize complete duplicates.
Remember to skip hands with no auction or with no players.


Syntax for .bsf files
---------------------
(Bridge script files)
player alias "Display,Last,First" "Display"
select segment "segment"
unselect segment
postpone (rerun in the end, e.g. for partner counts)
select board 7
(stuff to do with the selected board, e.g. contract)
Actually, make it sql-like
