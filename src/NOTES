2023-06-30
-Q could have a string argument, either "all" or
"5-3-3-2" (any) or "5=2=2=4" or "5M-3-3-2" (m too).
First see how many hands we actually have.

In the new funcPasses, only count passes from Valuation::handDist()
0x333, 0x334, 0x343, 0x433 (so 4-3-3-3).
Test the new code.
Do other distributions.
Look at the actual results.




2023-06-14
In stats/, mainly figure out what DuplStats actually does,
and comment it and check it for obvious bugs.  With that,
stats/ is mostly done I think.

Look at code that is flagged in the Excel spreadsheet.

dispatch
* More general language parser?
  Write dispatch language suitable also for later SQL queries
* Select by year as well?
* Maybe just DLL callable from Python


RefLines
- Buffer::fix
  - [What is line 422 doing?  "Deleted a field"?]


28.06.2017
----------
Double dummy
- New kind of trace?  Goes in DDS as well

Valuation
* Improve setCompBalanced to go by #cards and #points, not prod,
  to calculate distances

Term
* Try one vs. Valuation
* Implement Term more generally
* Think about limits that one Term imposes on other terms (big table)

Data
- Include BBOVG and BBOSH up to today
- Check that Sheet and SheetHand still work

NERs
* Dates: Write extractor for embedded dates in tags
* Tourneys
* Player names

Higher semantics
* Find unrealistic sequences (opening final contract) [valuation]
* Very expensive bids (offering huge upside score).
* Check links (http, www).  Also from deleted nt comments.
* Look again at players once we check the links in lin files.
* Store convention cards?
* Screenscrape major championships, compare.

update Pavlicek missive and Excel

Regression
----------
./reader -I -R -c -s -q -v 30 (maybe -p as well, -e)

In principle there is lots to do with
* -e (whatever it does)
* -p (ditto)
* perl skipnames.pl all
* perl skiphands.pl all
* perl director.pl dir
* perl checkskip.pl


Makefiles
---------
        compile runs    threads
-------------------------------
visual  yes     yes     yes
cygwin  yes     segf
mingw   almost
clang
ubuntu

Database
--------
Be able to store
- Play trace, including error types
- Hand to open bidding (0-4)
- board display number, can check dealer/vul then
- Files, Dirs (or combine?)
- Systems, and some characteristics
 Defenses, and some characteristics

Generate each of the tables in an sqlite DB as txt

Ingest them into sqlite in a separate program

some kind of "make" ("scour") looks for new or changed files.
Output proposed deltas to DB

Find a way to normalize all important text fields.

Should somehow recognize complete duplicates.
Remember to skip hands with no auction or with no players.


Syntax for .bsf files
---------------------
(Bridge script files)
player alias "Display,Last,First" "Display"
select segment "segment"
unselect segment
postpone (rerun in the end, e.g. for partner counts)
select board 7
(stuff to do with the selected board, e.g. contract)
Actually, make it sql-like
