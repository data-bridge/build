25.02.2017
----------
Sheet
* 00, 10-46: No Exceptions (-R), no sheets (-D), no grep ERR

* TODO: 01-09 everything, 00 cleanup (or done?)
* Search for TD, [Dd]irector

* 16002 o4 DBL detected? 17392 o11 too.  314 c15

* 09: Two deletions still not as ERR_LIN

* Get rid of all _ROTATE tags in .ref files
* Make a _ROTATE tag in validateLIN for this
* Need deleteLIN syntax for multiple tags?

rs -> SIDE_WRONG, ...

* ERR tags
  All valid
  All refer to right tag
  Counts OK
  Prefer LIN to non-LIN (avoid mostly non-LIN?)
  Categories OK (add or delete categories)
Multiple changes to single line
Tag for flipped side

* Expand referr.cpp: classify function
* Another str() function that outputs an IMP sheet,
  will also need vul

ref files
* automate check of ERR_LIN(a,b,c), different by error type
* Have to look at tag counts, consistent for each type of LIN_ERR.
* Check #lines in .skip against actual line count.
* what is then left in .ref files (after sheet elimination)
* Syntax to allow insertLIN, replaceLIN, deleteLIN -1 (last element)
* Find instances where this is useful
* use perl or Sheet to find deletes of mc|n|pg||
* in this way, eliminate lines from .ref files (backup first)
* May have deleted whole hands due to single bad cards...
* Maybe tolerate tricks in wrong order within each trick
* Very expensive bids (offering huge upside score).
* Very expensive or "stupid" plays (quickTricks?).
* Find unrealistic sequences (opening final contract)

Dates (NER)
* Detect conflicts between own extractions and HTML from Japan.
  Also extract directly from BBO
* Extract dates with perl from .lin files (mn and vg)

Tourneys (NER)

Player names (NER)

C++ code
* rewrite validateLIN with a function and a loop
* rewrite Segment TODO with functions
* do something about dispatch.cpp; make chunk a struct with methods?
* Print example of each validate "error"
* Still segfault at end?
* Allow concatenated files, e.g. RBN but also LIN
* TODOs

Perl
* Clean up perl path and @INC

Quality of fixes
* No duplicates in BBOSH (file names)
* BBOSH files sorted properly into directories
* Screenscrape major championships, compare.
* Check links (http, www).  Also from deleted nt comments.
* Look again at players once we check the links in lin files.
* Store convention cards?

Data
- Include BBOVG and BBOSH up to today
- Look for more sources?  Later...

update Pavlicek missive and Excel

Regression
----------
* ./reader -I -R -c -s -v 30 (maybe -p as well)
* ./reader -I -D -v 30
* perl refstats.pl all
* perl scripts/flagref.pl 019000 (ref file quality)
* perl checkskip.pl all, perl checkref.pl all

Stats
-----
19,306,468 in LIN_VG
    25,440 in .ref

- Number of (good) hands
- Number of files
  - Perfect
  - Some fixes (say few .ref lines and few .xxx effect lines)
  - Skips

Functionality
-------------

options
-------
-A analyse DD
-p play analyze DD
-n output all names to appropriately named text files

Makefiles
---------
        compile runs    threads
-------------------------------
visual  yes     yes     yes
cygwin  yes     segf
mingw   almost
clang
ubuntu

Valuation
---------
Board: Valuation

Double-dummy
------------
* Tableau: Call DDS
* Trace: 
  - (1) old trace, can count mistakes
  - (2) new trace, can compare within suit and between suits,
    probably friend of Deal.  Need new DDS function?

How to multi-thread the DDS calls?
Threads consume single boards from segments (all instances).

Database
--------
Be able to store
- Play trace, including error types
- Hand to open bidding (0-4)
- board display number, can check dealer/vul then
- Files, Dirs (or combine?)
- Systems, and some characteristics
 Defenses, and some characteristics

Generate each of the tables in an sqlite DB as txt

Ingest them into sqlite in a separate program

some kind of "make" ("scour") looks for new or changed files.
Output proposed deltas to DB

Find a way to normalize all important text fields.

Should somehow recognize complete duplicates.
Remember to skip hands with no auction or with no players.


Syntax for .bsf files
---------------------
(Bridge script files)
player alias "Display,Last,First" "Display"
select segment "segment"
unselect segment
postpone (rerun in the end, e.g. for partner counts)
select board 7
(stuff to do with the selected board, e.g. contract)
Actually, make it sql-like
