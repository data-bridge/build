In perl
  - If there are header differences: Recommend a ref line to fix it
    end
  - For each md that's not in the lin file
    Go through files +/- 100
    If md exists
      if it doesn't fit, say where it first differs, then end
    end
    All the others in source file must also be there?
    warn if not present at all
    warn if different
  - modify pre-existing ref file (find that line from lin in orig)

Way to streamline all the replaceLIN for rs?

* Change .orig idea to diff-like
  - a insert file2.lin c-d (or maybe o21?)
  - a-b replace file2.lin d-d (or maybe o21?)
* Download all lin files again
* diff them against current ones (33464.lin should have an orig)

* Make another directory with the original lin, ref and skipref files

Need
1. reader must read the new format, incl. statistics
   - what tag to use for statistics?
   - .ref has ../12345.lin as well as 12345.lin
   - ref should use DUPLICATE/MERGED correctly
2. mergelin must generate the new format
3. convert the old .orig format to the new one

28.06.2017
----------
Valuation
* Improve setCompBalanced to go by #cards and #points, not prod,
  to calculate distances

Term
* Try one vs. Valuation
* Implement Term more generally
* Think about limits that one Term imposes on other terms (big table)

dispatch
* More general language parser?
  Write dispatch language suitable also for later SQL queries
* Select by year as well?

Perl scripts in BBOVG
- Make director.pl run without warnings 
  (so have log files of acceptable deviations)

Data
- Include BBOVG and BBOSH up to today
- Look for more sources?  Later...
- Check that Sheet and SheetHand still work

NERs
* Dates: Write extractor for embedded dates in tags
* Tourneys
* Player names

Higher semantics
* Find unrealistic sequences (opening final contract) [valuation]
* Very expensive bids (offering huge upside score).
* Check links (http, www).  Also from deleted nt comments.
* Look again at players once we check the links in lin files.
* Store convention cards?
* Screenscrape major championships, compare.

update Pavlicek missive and Excel

Regression
----------
* perl skipnames.pl all (make it generate skip files)
* perl skiphands.pl all (make it generate skip files)
* ./reader -I -R -c -s -q -v 30 (maybe -p as well, -e)
  - with -e, use mergelin.pl for some merges (first without fix
    as third argument, then with it).  Manual edits of lin files
    may be better sometimes.
    Can run on whole bridgedata/hands directory, at least -e
* ./reader -I -D -v 30
* perl director.pl dir (a lot, unfortunately)
* perl checkskip.pl all, perl checkref.pl all


Makefiles
---------
        compile runs    threads
-------------------------------
visual  yes     yes     yes
cygwin  yes     segf
mingw   almost
clang
ubuntu

Valuation
---------
Board: Valuation

Double-dummy
------------
* Tableau: Call DDS
* Trace: 
  - (1) old trace, can count mistakes
  - (2) new trace, can compare within suit and between suits,
    probably friend of Deal.  Need new DDS function?

How to multi-thread the DDS calls?
Threads consume single boards from segments (all instances).

Database
--------
Be able to store
- Play trace, including error types
- Hand to open bidding (0-4)
- board display number, can check dealer/vul then
- Files, Dirs (or combine?)
- Systems, and some characteristics
 Defenses, and some characteristics

Generate each of the tables in an sqlite DB as txt

Ingest them into sqlite in a separate program

some kind of "make" ("scour") looks for new or changed files.
Output proposed deltas to DB

Find a way to normalize all important text fields.

Should somehow recognize complete duplicates.
Remember to skip hands with no auction or with no players.


Syntax for .bsf files
---------------------
(Bridge script files)
player alias "Display,Last,First" "Display"
select segment "segment"
unselect segment
postpone (rerun in the end, e.g. for partner counts)
select board 7
(stuff to do with the selected board, e.g. contract)
Actually, make it sql-like
